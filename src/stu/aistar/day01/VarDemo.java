package stu.aistar.day01;

public class VarDemo {
    public static void main(String[] args) {
        //数据类型 变量名 [= 变量值];
        byte b = 10;

        //1.数据肯定是存储在JVM内存中的
        //2.定义在方法内部的变量 - 局部变量[JVM的栈区]
        //3.局部变量的生命周期是伴随着方法(main)的调用的开始和结束

        //流程
        //1.JVM加载VarDemo.class到内存
        //2.JVM找到main方法想要去执行里面的程序
        //3.此处需要申请一块区域来保存数据10
        //   3-1. 区域的大小由前面的数据类型来决定的 - int类型 - 区域4个字节32bit的大小
        //   3-2. 栈里面的区域的大小一旦被确定了,就不能改变 - 肯定有的时候会有内存的浪费
        //   3-3. 虽然空间浪费了,但是读取的效率会提高 - 典型的"以空间换时间"

        //4. 只要是内存中的空间,这个空间必然会有一个地址,所以变量的存在是为了给这个区域取了个名字
        //   变量是为了方便用户来通过它访问到这个空间中存储的具体的那个值的

        //把整数10赋值给一个int类型的变量a
        int a = 10;

        System.out.println(a);

        // == 比较的就是"坑 - 区域"里面存储的数据
        System.out.println(b == a);//true
    }
}
